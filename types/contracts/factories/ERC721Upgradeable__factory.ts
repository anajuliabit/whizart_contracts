/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721Upgradeable,
  ERC721UpgradeableInterface,
} from "../ERC721Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612397806100206000396000f3fe608060405234801561001057600080fd5b50600436106100bf5760003560e01c80636352211e1161007c5780636352211e1461019657806370a08231146101c657806395d89b41146101f6578063a22cb46514610214578063b88d4fde14610230578063c87b56dd1461024c578063e985e9c51461027c576100bf565b806301ffc9a7146100c457806306fdde03146100f4578063081812fc14610112578063095ea7b31461014257806323b872dd1461015e57806342842e0e1461017a575b600080fd5b6100de60048036038101906100d99190611671565b6102ac565b6040516100eb91906119eb565b60405180910390f35b6100fc61038e565b6040516101099190611a06565b60405180910390f35b61012c600480360381019061012791906116c3565b610420565b6040516101399190611984565b60405180910390f35b61015c60048036038101906101579190611635565b6104a5565b005b6101786004803603810190610173919061152f565b6105bd565b005b610194600480360381019061018f919061152f565b61061d565b005b6101b060048036038101906101ab91906116c3565b61063d565b6040516101bd9190611984565b60405180910390f35b6101e060048036038101906101db91906114ca565b6106ef565b6040516101ed9190611ba8565b60405180910390f35b6101fe6107a7565b60405161020b9190611a06565b60405180910390f35b61022e600480360381019061022991906115f9565b610839565b005b61024a6004803603810190610245919061157e565b61084f565b005b610266600480360381019061026191906116c3565b6108b1565b6040516102739190611a06565b60405180910390f35b610296600480360381019061029191906114f3565b610958565b6040516102a391906119eb565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061037757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103875750610386826109ec565b5b9050919050565b60606065805461039d90611dcd565b80601f01602080910402602001604051908101604052809291908181526020018280546103c990611dcd565b80156104165780601f106103eb57610100808354040283529160200191610416565b820191906000526020600020905b8154815290600101906020018083116103f957829003601f168201915b5050505050905090565b600061042b82610a56565b61046a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046190611b08565b60405180910390fd5b6069600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104b08261063d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051890611b68565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610540610ac2565b73ffffffffffffffffffffffffffffffffffffffff16148061056f575061056e81610569610ac2565b610958565b5b6105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a590611aa8565b60405180910390fd5b6105b88383610aca565b505050565b6105ce6105c8610ac2565b82610b83565b61060d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060490611b88565b60405180910390fd5b610618838383610c61565b505050565b6106388383836040518060200160405280600081525061084f565b505050565b6000806067600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106dd90611ae8565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610760576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075790611ac8565b60405180910390fd5b606860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060606680546107b690611dcd565b80601f01602080910402602001604051908101604052809291908181526020018280546107e290611dcd565b801561082f5780601f106108045761010080835404028352916020019161082f565b820191906000526020600020905b81548152906001019060200180831161081257829003601f168201915b5050505050905090565b61084b610844610ac2565b8383610ebd565b5050565b61086061085a610ac2565b83610b83565b61089f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089690611b88565b60405180910390fd5b6108ab8484848461102a565b50505050565b60606108bc82610a56565b6108fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f290611b48565b60405180910390fd5b6000610905611086565b905060008151116109255760405180602001604052806000815250610950565b8061092f8461109d565b604051602001610940929190611960565b6040516020818303038152906040525b915050919050565b6000606a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166067600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816069600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b3d8361063d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610b8e82610a56565b610bcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc490611a88565b60405180910390fd5b6000610bd88361063d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c4757508373ffffffffffffffffffffffffffffffffffffffff16610c2f84610420565b73ffffffffffffffffffffffffffffffffffffffff16145b80610c585750610c578185610958565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c818261063d565b73ffffffffffffffffffffffffffffffffffffffff1614610cd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cce90611b28565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3e90611a48565b60405180910390fd5b610d5283838361124a565b610d5d600082610aca565b6001606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dad9190611ce3565b925050819055506001606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e049190611c5c565b92505081905550816067600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2390611a68565b60405180910390fd5b80606a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161101d91906119eb565b60405180910390a3505050565b611035848484610c61565b6110418484848461124f565b611080576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107790611a28565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606060008214156110e5576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611245565b600082905060005b6000821461111757808061110090611e30565b915050600a826111109190611cb2565b91506110ed565b60008167ffffffffffffffff811115611159577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561118b5781602001600182028036833780820191505090505b5090505b6000851461123e576001826111a49190611ce3565b9150600a856111b39190611e79565b60306111bf9190611c5c565b60f81b8183815181106111fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856112379190611cb2565b945061118f565b8093505050505b919050565b505050565b60006112708473ffffffffffffffffffffffffffffffffffffffff166113e6565b156113d9578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611299610ac2565b8786866040518563ffffffff1660e01b81526004016112bb949392919061199f565b602060405180830381600087803b1580156112d557600080fd5b505af192505050801561130657506040513d601f19601f82011682018060405250810190611303919061169a565b60015b611389573d8060008114611336576040519150601f19603f3d011682016040523d82523d6000602084013e61133b565b606091505b50600081511415611381576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137890611a28565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506113de565b600190505b949350505050565b600080823b905060008111915050919050565b600061140c61140784611be8565b611bc3565b90508281526020810184848401111561142457600080fd5b61142f848285611d8b565b509392505050565b60008135905061144681612305565b92915050565b60008135905061145b8161231c565b92915050565b60008135905061147081612333565b92915050565b60008151905061148581612333565b92915050565b600082601f83011261149c57600080fd5b81356114ac8482602086016113f9565b91505092915050565b6000813590506114c48161234a565b92915050565b6000602082840312156114dc57600080fd5b60006114ea84828501611437565b91505092915050565b6000806040838503121561150657600080fd5b600061151485828601611437565b925050602061152585828601611437565b9150509250929050565b60008060006060848603121561154457600080fd5b600061155286828701611437565b935050602061156386828701611437565b9250506040611574868287016114b5565b9150509250925092565b6000806000806080858703121561159457600080fd5b60006115a287828801611437565b94505060206115b387828801611437565b93505060406115c4878288016114b5565b925050606085013567ffffffffffffffff8111156115e157600080fd5b6115ed8782880161148b565b91505092959194509250565b6000806040838503121561160c57600080fd5b600061161a85828601611437565b925050602061162b8582860161144c565b9150509250929050565b6000806040838503121561164857600080fd5b600061165685828601611437565b9250506020611667858286016114b5565b9150509250929050565b60006020828403121561168357600080fd5b600061169184828501611461565b91505092915050565b6000602082840312156116ac57600080fd5b60006116ba84828501611476565b91505092915050565b6000602082840312156116d557600080fd5b60006116e3848285016114b5565b91505092915050565b6116f581611d17565b82525050565b61170481611d29565b82525050565b600061171582611c19565b61171f8185611c2f565b935061172f818560208601611d9a565b61173881611f66565b840191505092915050565b600061174e82611c24565b6117588185611c40565b9350611768818560208601611d9a565b61177181611f66565b840191505092915050565b600061178782611c24565b6117918185611c51565b93506117a1818560208601611d9a565b80840191505092915050565b60006117ba603283611c40565b91506117c582611f77565b604082019050919050565b60006117dd602483611c40565b91506117e882611fc6565b604082019050919050565b6000611800601983611c40565b915061180b82612015565b602082019050919050565b6000611823602c83611c40565b915061182e8261203e565b604082019050919050565b6000611846603883611c40565b91506118518261208d565b604082019050919050565b6000611869602a83611c40565b9150611874826120dc565b604082019050919050565b600061188c602983611c40565b91506118978261212b565b604082019050919050565b60006118af602c83611c40565b91506118ba8261217a565b604082019050919050565b60006118d2602983611c40565b91506118dd826121c9565b604082019050919050565b60006118f5602f83611c40565b915061190082612218565b604082019050919050565b6000611918602183611c40565b915061192382612267565b604082019050919050565b600061193b603183611c40565b9150611946826122b6565b604082019050919050565b61195a81611d81565b82525050565b600061196c828561177c565b9150611978828461177c565b91508190509392505050565b600060208201905061199960008301846116ec565b92915050565b60006080820190506119b460008301876116ec565b6119c160208301866116ec565b6119ce6040830185611951565b81810360608301526119e0818461170a565b905095945050505050565b6000602082019050611a0060008301846116fb565b92915050565b60006020820190508181036000830152611a208184611743565b905092915050565b60006020820190508181036000830152611a41816117ad565b9050919050565b60006020820190508181036000830152611a61816117d0565b9050919050565b60006020820190508181036000830152611a81816117f3565b9050919050565b60006020820190508181036000830152611aa181611816565b9050919050565b60006020820190508181036000830152611ac181611839565b9050919050565b60006020820190508181036000830152611ae18161185c565b9050919050565b60006020820190508181036000830152611b018161187f565b9050919050565b60006020820190508181036000830152611b21816118a2565b9050919050565b60006020820190508181036000830152611b41816118c5565b9050919050565b60006020820190508181036000830152611b61816118e8565b9050919050565b60006020820190508181036000830152611b818161190b565b9050919050565b60006020820190508181036000830152611ba18161192e565b9050919050565b6000602082019050611bbd6000830184611951565b92915050565b6000611bcd611bde565b9050611bd98282611dff565b919050565b6000604051905090565b600067ffffffffffffffff821115611c0357611c02611f37565b5b611c0c82611f66565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000611c6782611d81565b9150611c7283611d81565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ca757611ca6611eaa565b5b828201905092915050565b6000611cbd82611d81565b9150611cc883611d81565b925082611cd857611cd7611ed9565b5b828204905092915050565b6000611cee82611d81565b9150611cf983611d81565b925082821015611d0c57611d0b611eaa565b5b828203905092915050565b6000611d2282611d61565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611db8578082015181840152602081019050611d9d565b83811115611dc7576000848401525b50505050565b60006002820490506001821680611de557607f821691505b60208210811415611df957611df8611f08565b5b50919050565b611e0882611f66565b810181811067ffffffffffffffff82111715611e2757611e26611f37565b5b80604052505050565b6000611e3b82611d81565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611e6e57611e6d611eaa565b5b600182019050919050565b6000611e8482611d81565b9150611e8f83611d81565b925082611e9f57611e9e611ed9565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008201527f73206e6f74206f776e0000000000000000000000000000000000000000000000602082015250565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b61230e81611d17565b811461231957600080fd5b50565b61232581611d29565b811461233057600080fd5b50565b61233c81611d35565b811461234757600080fd5b50565b61235381611d81565b811461235e57600080fd5b5056fea2646970667358221220e997397010a0e1702dc8c350ed737711bb989acfb1f5f69ed783e1b9a30edd4b64736f6c63430008040033";

type ERC721UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Upgradeable__factory extends ContractFactory {
  constructor(...args: ERC721UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC721Upgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721Upgradeable {
    return super.attach(address) as ERC721Upgradeable;
  }
  connect(signer: Signer): ERC721Upgradeable__factory {
    return super.connect(signer) as ERC721Upgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721UpgradeableInterface {
    return new utils.Interface(_abi) as ERC721UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC721Upgradeable;
  }
}
