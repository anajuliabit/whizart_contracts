/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WhizartBox, WhizartBoxInterface } from "../WhizartBox";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWhizartWorkshop",
        name: "_workshop",
        type: "address",
      },
      {
        internalType: "contract IWhizartArtist",
        name: "_artist",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "artist",
    outputs: [
      {
        internalType: "contract IWhizartArtist",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xa25ff5b0",
        type: "bytes32",
      },
    ],
    name: "c_0xa25ff5b0",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "workshop",
    outputs: [
      {
        internalType: "contract IWhizartWorkshop",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000c5d38038062000c5d8339818101604052810190620000379190620001f5565b6200006b7fbdc991fb643d14042b20a03d9724e2036de4c9bc6e60f6f1cde8aa5f33f16b1560001b620001c460201b60201c565b6200009f7f179fb5816af13337a86a0a05b9b65cbf19904c34ef4bad51c1d7f312744701d860001b620001c460201b60201c565b620000d37f81d1a1ae1f380a3b9618999ee70308844ea99c75570345d04a3b454a55a0be7260001b620001c460201b60201c565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001477f7579a6ece7a10b7f0046e7e2d907d8bf0f7a2ca223bbddc3d852c5e9dbe7caaf60001b620001c460201b60201c565b6200017b7fe95d62891037bc4316db3de8d7dedcecc6616929f1e4fd49a7f181c6d65c1e1c60001b620001c460201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002c6565b50565b600081519050620001d88162000292565b92915050565b600081519050620001ef81620002ac565b92915050565b600080604083850312156200020957600080fd5b60006200021985828601620001de565b92505060206200022c85828601620001c7565b9150509250929050565b6000620002438262000272565b9050919050565b6000620002578262000236565b9050919050565b60006200026b8262000236565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200029d816200024a565b8114620002a957600080fd5b50565b620002b7816200025e565b8114620002c357600080fd5b50565b61098780620002d66000396000f3fe60806040526004361061003f5760003560e01c80631249c58b1461004457806343bc16121461004e578063720c479814610079578063dce05978146100a4575b600080fd5b61004c6100cd565b005b34801561005a57600080fd5b50610063610622565b6040516100709190610773565b60405180910390f35b34801561008557600080fd5b5061008e610648565b60405161009b919061078e565b60405180910390f35b3480156100b057600080fd5b506100cb60048036038101906100c69190610699565b61066c565b005b6100f97fd6fcb6613816562bf488eb69ac2d9da19b0806f175fc92c7666cd2b100630db860001b61066c565b6101257f1c215128845ed8afe5ee635bab6db74ea0979e064a0819f82a169a7502d4aaa560001b61066c565b6101517f1372d8520e3af7cb34f2b04fe9c48f1dfd71b1efd2ab05e12e8ae265e9f4260360001b61066c565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7f93ebd6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156101bd57600080fd5b505af11580156101d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f591906106c2565b90506102237f060bbd284ae410af88121b6a278c869af1d7e6698c0dce6b5771a6d9fb6b8caf60001b61066c565b61024f7f70e140e36b196b71273264398ed6039f9040f28c1502fd06af0861f7a85dd79960001b61066c565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a7f93ebd6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156102ba57600080fd5b505af11580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f291906106c2565b90506103207f7140d999394b3c618417ebedbe709267af6afb7237389e8618e60167e0f7279b60001b61066c565b61034c7f178276db2bc97acd32ec3ce797ebf30fa1369635d4565e1fc9aaefff583187e760001b61066c565b6103787f2b9370ec7d8de5cfb7985eba9f754bd18d721c7f3cee70d9e64dbe1b9a8563fb60001b61066c565b34818361038591906107da565b146103c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bc906107a9565b60405180910390fd5b6103f17fb07b79aefe5b2676f4f133d0649184296274fc4200880febb10f017b568a197a60001b61066c565b61041d7fc505f48c48c6954f188c7284317e0de860d76b1c76e65dccc1d898c8317853c660001b61066c565b6104497f0b7c1355a27155ec23ca40c877f70cb52d2fb3412c6a10d3750bffaf7b9347da60001b61066c565b60006001905061047b7fa804b515b1fcfde3d3e97511c9e0582b336f0e0ca19b23834436fef0ac0ef8f060001b61066c565b6104a77ffac69805a53d91997a920e489f6c0ad06671251ea361ff0218f5b51d1d0997bc60001b61066c565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663793daa448333846040518463ffffffff1660e01b815260040161050392919061074a565b6000604051808303818588803b15801561051c57600080fd5b505af1158015610530573d6000803e3d6000fd5b50505050506105617f5b0ad7e40fbbca1830917dc57a74dfce9ed7880dd52a5fc11e6b40a07575255d60001b61066c565b61058d7f703819d2c91dbe8340c6ef2638690a2649fb18299155cfb0108cc23e815b2ef860001b61066c565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663793daa448433846040518463ffffffff1660e01b81526004016105eb92919061074a565b6000604051808303818588803b15801561060457600080fd5b505af1158015610618573d6000803e3d6000fd5b5050505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b60008135905061067e81610923565b92915050565b6000815190506106938161093a565b92915050565b6000602082840312156106ab57600080fd5b60006106b98482850161066f565b91505092915050565b6000602082840312156106d457600080fd5b60006106e284828501610684565b91505092915050565b6106f481610830565b82525050565b61070381610883565b82525050565b610712816108a7565b82525050565b60006107256013836107c9565b9150610730826108fa565b602082019050919050565b61074481610876565b82525050565b600060408201905061075f60008301856106eb565b61076c602083018461073b565b9392505050565b600060208201905061078860008301846106fa565b92915050565b60006020820190506107a36000830184610709565b92915050565b600060208201905081810360008301526107c281610718565b9050919050565b600082825260208201905092915050565b60006107e58261086c565b91506107f08361086c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610825576108246108cb565b5b828201905092915050565b600061083b8261084c565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061088e82610895565b9050919050565b60006108a08261084c565b9050919050565b60006108b2826108b9565b9050919050565b60006108c48261084c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f57726f6e6720616d6f756e74206f6620424e4200000000000000000000000000600082015250565b61092c81610842565b811461093757600080fd5b50565b6109438161086c565b811461094e57600080fd5b5056fea264697066735822122048d81165de96a3c7c206ad9c284fc2716ff020e14779e9fb3ce39a4b65cc807c64736f6c63430008020033";

type WhizartBoxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WhizartBoxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WhizartBox__factory extends ContractFactory {
  constructor(...args: WhizartBoxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _workshop: string,
    _artist: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WhizartBox> {
    return super.deploy(
      _workshop,
      _artist,
      overrides || {}
    ) as Promise<WhizartBox>;
  }
  getDeployTransaction(
    _workshop: string,
    _artist: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_workshop, _artist, overrides || {});
  }
  attach(address: string): WhizartBox {
    return super.attach(address) as WhizartBox;
  }
  connect(signer: Signer): WhizartBox__factory {
    return super.connect(signer) as WhizartBox__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WhizartBoxInterface {
    return new utils.Interface(_abi) as WhizartBoxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WhizartBox {
    return new Contract(address, _abi, signerOrProvider) as WhizartBox;
  }
}
